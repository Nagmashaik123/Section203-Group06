{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Countries_Cities_Location.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPFhaEbQeFJvZuR+y8Zvvpp",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Nagmashaik123/Section203-Group06/blob/main/CovidVaccineWorldWide.csv\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "roJjkW8jvdFD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589
        },
        "outputId": "3f11573a-534c-4d37-9c48-0360552d9a91"
      },
      "source": [
        "import pandas as pd\n",
        "df=pd.read_csv(r\"CovidVaccine.csv\",error_bad_lines=False)\n",
        "df\n"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TweetDate</th>\n",
              "      <th>TweetText</th>\n",
              "      <th>TweetAuthor</th>\n",
              "      <th>TweetLocation</th>\n",
              "      <th>AllHashtags</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-03-17 23:59:34</td>\n",
              "      <td>The only way #COVID19 can mutate with variants...</td>\n",
              "      <td>kemsunde</td>\n",
              "      <td>NaN</td>\n",
              "      <td>['COVID19', 'CovidVaccine', 'GetTheFactsGetThe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-03-17 23:59:20</td>\n",
              "      <td>I've now officially had my 1st dose of the #Co...</td>\n",
              "      <td>ManeckiN</td>\n",
              "      <td>The Wild Western Wastes</td>\n",
              "      <td>['CovidVaccine', 'COVID19', 'PfizerVaccine', '...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-03-17 23:58:31</td>\n",
              "      <td>@hendopolis Imagine if the #Brexit referendum ...</td>\n",
              "      <td>raymasseytweets</td>\n",
              "      <td>England, United Kingdom</td>\n",
              "      <td>['Brexit', 'EU', 'TrueColours', 'Impfstoff', '...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-03-17 23:58:03</td>\n",
              "      <td>@EICostheta @RicBarraArch1 @insiders Yep. The ...</td>\n",
              "      <td>MikeFitzAU</td>\n",
              "      <td>Mudjimba, Qld, Australia</td>\n",
              "      <td>['LiarsNParasites', 'CovidVaccine']</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-03-17 23:57:37</td>\n",
              "      <td>This sounds like an important topic for @NickS...</td>\n",
              "      <td>stephjantzen</td>\n",
              "      <td>Greater Sacramento, California</td>\n",
              "      <td>['FiresideChat', 'CovidVaccine']</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26244</th>\n",
              "      <td>2021-03-12 12:50:29</td>\n",
              "      <td>@abc7newsbayarea #CovidVaccine ...of course th...</td>\n",
              "      <td>chelseazago</td>\n",
              "      <td>Communist Canada</td>\n",
              "      <td>['CovidVaccine']</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26245</th>\n",
              "      <td>2021-03-12 12:50:21</td>\n",
              "      <td>Got myshot. Excited!!  #vaccinated #VirusCoron...</td>\n",
              "      <td>gpickner</td>\n",
              "      <td>Pierre, SD</td>\n",
              "      <td>['vaccinated', 'VirusCoronashot']</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26246</th>\n",
              "      <td>2021-03-12 12:50:05</td>\n",
              "      <td>#Mozambique launches its #Covid19vaccine progr...</td>\n",
              "      <td>ARCBriefing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>['Mozambique', 'Covid19vaccine', 'ARCBriefing']</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26247</th>\n",
              "      <td>2021-03-12 12:50:03</td>\n",
              "      <td>#COVID19Vaccine: Karnataka CM B S Yediyurappa ...</td>\n",
              "      <td>TheDailyPioneer</td>\n",
              "      <td>NaN</td>\n",
              "      <td>['COVID19Vaccine', 'BSYediyurappa', 'Karnataka...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26248</th>\n",
              "      <td>2021-03-12 12:49:58</td>\n",
              "      <td>Time for a full investigation into Ron DeSanti...</td>\n",
              "      <td>Osceola_DEC</td>\n",
              "      <td>Osceola County, Florida</td>\n",
              "      <td>['CovidVaccine', 'DisgracefulDesantis']</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26249 rows Ã— 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                 TweetDate  ...                                        AllHashtags\n",
              "0      2021-03-17 23:59:34  ...  ['COVID19', 'CovidVaccine', 'GetTheFactsGetThe...\n",
              "1      2021-03-17 23:59:20  ...  ['CovidVaccine', 'COVID19', 'PfizerVaccine', '...\n",
              "2      2021-03-17 23:58:31  ...  ['Brexit', 'EU', 'TrueColours', 'Impfstoff', '...\n",
              "3      2021-03-17 23:58:03  ...                ['LiarsNParasites', 'CovidVaccine']\n",
              "4      2021-03-17 23:57:37  ...                   ['FiresideChat', 'CovidVaccine']\n",
              "...                    ...  ...                                                ...\n",
              "26244  2021-03-12 12:50:29  ...                                   ['CovidVaccine']\n",
              "26245  2021-03-12 12:50:21  ...                  ['vaccinated', 'VirusCoronashot']\n",
              "26246  2021-03-12 12:50:05  ...    ['Mozambique', 'Covid19vaccine', 'ARCBriefing']\n",
              "26247  2021-03-12 12:50:03  ...  ['COVID19Vaccine', 'BSYediyurappa', 'Karnataka...\n",
              "26248  2021-03-12 12:49:58  ...            ['CovidVaccine', 'DisgracefulDesantis']\n",
              "\n",
              "[26249 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mVznv2-v8b6h",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0e6e5586-9583-4bd9-d66d-7e805e69d42d"
      },
      "source": [
        "!pip install geopy"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: geopy in /usr/local/lib/python3.7/dist-packages (1.17.0)\n",
            "Requirement already satisfied: geographiclib<2,>=1.49 in /usr/local/lib/python3.7/dist-packages (from geopy) (1.50)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bGMvjwxRE-Pc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "69bffb8f-7293-4af6-97ca-d8d69eed79c9"
      },
      "source": [
        "import numpy as np\n",
        "import re\n",
        "\n",
        "# Reading emoji patterns which contains emoticons , symbols & pictographs, transport & map symbols , flags\n",
        "emojisCollection = re.compile(\"[\"\n",
        "                       u\"\\U0001F600-\\U0001F64F\"  \n",
        "                       u\"\\U0001F300-\\U0001F5FF\"  \n",
        "                       u\"\\U0001F680-\\U0001F6FF\"  \n",
        "                       u\"\\U0001F1E0-\\U0001F1FF\"  \n",
        "                       u\"\\U00002702-\\U000027B0\"\n",
        "                       u\"\\U000024C2-\\U0001F251\"\n",
        "                       \"]+\", flags=re.UNICODE)\n",
        "df['TweetLocation'] = (df['TweetLocation'].str.replace(emojisCollection, '').str.strip())\n",
        "\n",
        "df['TweetLocation'] = df.TweetLocation.str.split(', ').str.get(0)\n",
        "df['TweetLocation'] = df['TweetLocation'].replace(np.nan, 'Unknown', regex=True)\n",
        "df['TweetLocation']"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                        Unknown\n",
              "1        The Wild Western Wastes\n",
              "2                        England\n",
              "3                       Mudjimba\n",
              "4             Greater Sacramento\n",
              "                  ...           \n",
              "26244           Communist Canada\n",
              "26245                     Pierre\n",
              "26246                    Unknown\n",
              "26247                    Unknown\n",
              "26248             Osceola County\n",
              "Name: TweetLocation, Length: 26249, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KltxryHevizF"
      },
      "source": [
        "from functools import partial\n",
        "from geopy.geocoders import Nominatim\n",
        "import re\n",
        "\n",
        "countryList =[]\n",
        "# Function to map the country for the corresponding city location\n",
        "def checkCountry(city):\n",
        "  geolocator = Nominatim(user_agent=\"COVID-19 vaccination attitudes\")\n",
        "  geocode = partial(geolocator.geocode, language=\"en\")\n",
        "  # passing the city through geocode api to return the location if city is not unknow\n",
        "  if city != \"Unknown\" and not re.match(r'^[_\\W]+$', city)  :\n",
        "    location = geocode(city)   \n",
        "    if location.address.find(\", \") != -1:      \n",
        "      country = str(location.address).split(\", \")[-1] \n",
        "    elif location is None:\n",
        "      country = \"Unknown\"   \n",
        "    else:\n",
        "      country = location.address  \n",
        "  # If city is not known then setting country as Unknown        \n",
        "  else:    \n",
        "    country = \"Unknown\"   \n",
        "  return country\n",
        "\n",
        "    "
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "psdH_XDY5awp"
      },
      "source": [
        "cities=[]\n",
        "countries=[]\n",
        "cities = df['TweetLocation'].tolist()\n",
        "for city in cities:\n",
        "    try:\n",
        "        countries.append(checkCountry(city))  #Calling the checkCountry function\n",
        "    except:\n",
        "        countries.append('Unknown')"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ygkTlk-LJ9v0"
      },
      "source": [
        "# Zipping city and corresponding country together\n",
        "dict_1=dict(zip(cities,countries))"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-mdmXe-TJ-ev",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589
        },
        "outputId": "ec157b04-8a53-4657-f310-c839b433d488"
      },
      "source": [
        "df['Country']=df['TweetLocation'].map(dict_1)\n",
        "df"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TweetDate</th>\n",
              "      <th>TweetText</th>\n",
              "      <th>TweetAuthor</th>\n",
              "      <th>TweetLocation</th>\n",
              "      <th>AllHashtags</th>\n",
              "      <th>Country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-03-17 23:59:34</td>\n",
              "      <td>The only way #COVID19 can mutate with variants...</td>\n",
              "      <td>kemsunde</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>['COVID19', 'CovidVaccine', 'GetTheFactsGetThe...</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-03-17 23:59:20</td>\n",
              "      <td>I've now officially had my 1st dose of the #Co...</td>\n",
              "      <td>ManeckiN</td>\n",
              "      <td>The Wild Western Wastes</td>\n",
              "      <td>['CovidVaccine', 'COVID19', 'PfizerVaccine', '...</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-03-17 23:58:31</td>\n",
              "      <td>@hendopolis Imagine if the #Brexit referendum ...</td>\n",
              "      <td>raymasseytweets</td>\n",
              "      <td>England</td>\n",
              "      <td>['Brexit', 'EU', 'TrueColours', 'Impfstoff', '...</td>\n",
              "      <td>United Kingdom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-03-17 23:58:03</td>\n",
              "      <td>@EICostheta @RicBarraArch1 @insiders Yep. The ...</td>\n",
              "      <td>MikeFitzAU</td>\n",
              "      <td>Mudjimba</td>\n",
              "      <td>['LiarsNParasites', 'CovidVaccine']</td>\n",
              "      <td>Australia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-03-17 23:57:37</td>\n",
              "      <td>This sounds like an important topic for @NickS...</td>\n",
              "      <td>stephjantzen</td>\n",
              "      <td>Greater Sacramento</td>\n",
              "      <td>['FiresideChat', 'CovidVaccine']</td>\n",
              "      <td>Brazil</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26244</th>\n",
              "      <td>2021-03-12 12:50:29</td>\n",
              "      <td>@abc7newsbayarea #CovidVaccine ...of course th...</td>\n",
              "      <td>chelseazago</td>\n",
              "      <td>Communist Canada</td>\n",
              "      <td>['CovidVaccine']</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26245</th>\n",
              "      <td>2021-03-12 12:50:21</td>\n",
              "      <td>Got myshot. Excited!!  #vaccinated #VirusCoron...</td>\n",
              "      <td>gpickner</td>\n",
              "      <td>Pierre</td>\n",
              "      <td>['vaccinated', 'VirusCoronashot']</td>\n",
              "      <td>France</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26246</th>\n",
              "      <td>2021-03-12 12:50:05</td>\n",
              "      <td>#Mozambique launches its #Covid19vaccine progr...</td>\n",
              "      <td>ARCBriefing</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>['Mozambique', 'Covid19vaccine', 'ARCBriefing']</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26247</th>\n",
              "      <td>2021-03-12 12:50:03</td>\n",
              "      <td>#COVID19Vaccine: Karnataka CM B S Yediyurappa ...</td>\n",
              "      <td>TheDailyPioneer</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>['COVID19Vaccine', 'BSYediyurappa', 'Karnataka...</td>\n",
              "      <td>Unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26248</th>\n",
              "      <td>2021-03-12 12:49:58</td>\n",
              "      <td>Time for a full investigation into Ron DeSanti...</td>\n",
              "      <td>Osceola_DEC</td>\n",
              "      <td>Osceola County</td>\n",
              "      <td>['CovidVaccine', 'DisgracefulDesantis']</td>\n",
              "      <td>United States</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26249 rows Ã— 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                 TweetDate  ...         Country\n",
              "0      2021-03-17 23:59:34  ...         Unknown\n",
              "1      2021-03-17 23:59:20  ...         Unknown\n",
              "2      2021-03-17 23:58:31  ...  United Kingdom\n",
              "3      2021-03-17 23:58:03  ...       Australia\n",
              "4      2021-03-17 23:57:37  ...          Brazil\n",
              "...                    ...  ...             ...\n",
              "26244  2021-03-12 12:50:29  ...         Unknown\n",
              "26245  2021-03-12 12:50:21  ...          France\n",
              "26246  2021-03-12 12:50:05  ...         Unknown\n",
              "26247  2021-03-12 12:50:03  ...         Unknown\n",
              "26248  2021-03-12 12:49:58  ...   United States\n",
              "\n",
              "[26249 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZGJfaKS_bdwd"
      },
      "source": [
        "df.to_csv('CovidVaccineWorldWide.csv')"
      ],
      "execution_count": 8,
      "outputs": []
    }
  ]
}